package cc.wmhhb.dao;

import cc.wmhhb.entity.RedList;

import java.util.List;

import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.InsertProvider;
import org.apache.ibatis.annotations.Result;
import org.apache.ibatis.annotations.ResultMap;
import org.apache.ibatis.annotations.Results;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.Update;
import org.apache.ibatis.annotations.UpdateProvider;
import org.apache.ibatis.type.JdbcType;

public interface RedListMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table red_list
     *
     * @mbg.generated Sun May 10 16:34:36 CST 2020
     */
    @Delete({
        "delete from red_list",
        "where id = #{id,jdbcType=INTEGER}"
    })
    int deleteByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table red_list
     *
     * @mbg.generated Sun May 10 16:34:36 CST 2020
     */
    @Insert({
        "insert into red_list (id, img, ",
        "content, link, address, ",
        "create_time, create_by, ",
        "likes)",
        "values (#{id,jdbcType=INTEGER}, #{img,jdbcType=VARCHAR}, ",
        "#{content,jdbcType=VARCHAR}, #{link,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR}, ",
        "#{createTime,jdbcType=TIMESTAMP}, #{createBy,jdbcType=INTEGER}, ",
        "#{likes,jdbcType=INTEGER})"
    })
    int insert(RedList record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table red_list
     *
     * @mbg.generated Sun May 10 16:34:36 CST 2020
     */
    @InsertProvider(type=RedListSqlProvider.class, method="insertSelective")
    int insertSelective(RedList record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table red_list
     *
     * @mbg.generated Sun May 10 16:34:36 CST 2020
     */
    @Select({
        "select",
        "id, img, content, link, address, create_time, create_by, likes",
        "from red_list",
        "where id = #{id,jdbcType=INTEGER}"
    })
    @Results(id="redMap",value={
        @Result(column="id", property="id", jdbcType=JdbcType.INTEGER, id=true),
        @Result(column="img", property="img", jdbcType=JdbcType.VARCHAR),
        @Result(column="content", property="content", jdbcType=JdbcType.VARCHAR),
        @Result(column="link", property="link", jdbcType=JdbcType.VARCHAR),
        @Result(column="address", property="address", jdbcType=JdbcType.VARCHAR),
        @Result(column="create_time", property="createTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="create_by", property="createBy", jdbcType=JdbcType.INTEGER),
        @Result(column="likes", property="likes", jdbcType=JdbcType.INTEGER)
    })
    RedList selectByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table red_list
     *
     * @mbg.generated Sun May 10 16:34:36 CST 2020
     */
    @UpdateProvider(type=RedListSqlProvider.class, method="updateByPrimaryKeySelective")
    int updateByPrimaryKeySelective(RedList record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table red_list
     *
     * @mbg.generated Sun May 10 16:34:36 CST 2020
     */
    @Update({
        "update red_list",
        "set img = #{img,jdbcType=VARCHAR},",
          "content = #{content,jdbcType=VARCHAR},",
          "link = #{link,jdbcType=VARCHAR},",
          "address = #{address,jdbcType=VARCHAR},",
          "create_time = #{createTime,jdbcType=TIMESTAMP},",
          "create_by = #{createBy,jdbcType=INTEGER},",
          "likes = #{likes,jdbcType=INTEGER}",
        "where id = #{id,jdbcType=INTEGER}"
    })
    int updateByPrimaryKey(RedList record);
    
    //查找全部的方法
    @Select({
    	"select",
        "id, img, content, link, address, create_time, create_by, likes",
        "from red_list"
    })
    @ResultMap("redMap")
    List<RedList> selectAll();
}