package cc.sjzd.dao;

import java.util.List;

import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.InsertProvider;
import org.apache.ibatis.annotations.Many;
import org.apache.ibatis.annotations.Result;
import org.apache.ibatis.annotations.ResultMap;
import org.apache.ibatis.annotations.Results;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.Update;
import org.apache.ibatis.annotations.UpdateProvider;
import org.apache.ibatis.type.JdbcType;

import cc.sjzd.entity.PracticeCenter;

public interface PracticeCenterMapper {
    /**
     * 根据主键进行删除    
     * @mbg.generated Wed Apr 01 10:00:43 CST 2020
     */

    @Delete({
        "delete from practice_center",
        "where id = #{id,jdbcType=INTEGER}"
    })
    int deleteByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table practice_center
     *
     * @mbg.generated Wed Apr 01 10:00:43 CST 2020
     */
    @Insert({
        "insert into practice_center (center_name,",
        "create_time,address, ",
        "manager,phone,",
        "intro,type_id,imgs)",
        "values (#{centerName,jdbcType=VARCHAR}, ",
        "#{createTime,jdbcType=DATE}, #{address,jdbcType=VARCHAR}, ",
        "#{manager,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, ",
        "#{intro,jdbcType=VARCHAR}, #{typeId,jdbcType=INTEGER}, #{imgs,jdbcType=LONGVARCHAR})"
    })
    int insert(PracticeCenter record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table practice_center
     *
     * @mbg.generated Wed Apr 01 10:00:43 CST 2020
     */
    @InsertProvider(type=PracticeCenterSqlProvider.class, method="insertSelective")
    int insertSelective(PracticeCenter record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table practice_center
     *
     * @mbg.generated Wed Apr 01 10:00:43 CST 2020
     */
    @Select({
        "select",
        "id, center_name, create_time, address, manager, phone, intro, type_id, imgs",
        "from practice_center",
        "where id = #{id,jdbcType=INTEGER}"
    })
    @Results(id="centerMap",value={
        @Result(column="id", property="id", jdbcType=JdbcType.INTEGER, id=true),
        @Result(column="center_name", property="centerName", jdbcType=JdbcType.VARCHAR),
        @Result(column="create_time", property="createTime", jdbcType=JdbcType.DATE),
        @Result(column="address", property="address", jdbcType=JdbcType.VARCHAR),
        @Result(column="manager", property="manager", jdbcType=JdbcType.VARCHAR),
        @Result(column="phone", property="phone", jdbcType=JdbcType.VARCHAR),
        @Result(column="intro", property="intro", jdbcType=JdbcType.VARCHAR),
        @Result(column="type_id", property="typeId", jdbcType=JdbcType.INTEGER),
        @Result(column="imgs", property="imgs", jdbcType=JdbcType.LONGVARCHAR),
        @Result(property="institutes",javaType=List.class,column="id",
			many=@Many(select="cc.sjzd.dao.PracticeInstituteMapper.selectByCenterId")) 
    })
    PracticeCenter selectByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table practice_center
     *
     * @mbg.generated Wed Apr 01 10:00:43 CST 2020
     */
    @UpdateProvider(type=PracticeCenterSqlProvider.class, method="updateByPrimaryKeySelective")
    int updateByPrimaryKeySelective(PracticeCenter record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table practice_center
     *
     * @mbg.generated Wed Apr 01 10:00:43 CST 2020
     */
    @Update({
        "update practice_center",
        "set center_name = #{centerName,jdbcType=VARCHAR},",
          "create_time = #{createTime,jdbcType=DATE},",
          "address = #{address,jdbcType=VARCHAR},",
          "manager = #{manager,jdbcType=VARCHAR},",
          "phone = #{phone,jdbcType=VARCHAR},",
          "intro = #{intro,jdbcType=VARCHAR},",
          "type_id = #{typeId,jdbcType=INTEGER},",
          "imgs = #{imgs,jdbcType=LONGVARCHAR}",
        "where id = #{id,jdbcType=INTEGER}"
    })
    int updateByPrimaryKeyWithBLOBs(PracticeCenter record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table practice_center
     *
     * @mbg.generated Wed Apr 01 10:00:43 CST 2020
     */
    @Update({
        "update practice_center",
        "set center_name = #{centerName,jdbcType=VARCHAR},",
          "create_time = #{createTime,jdbcType=DATE},",
          "address = #{address,jdbcType=VARCHAR},",
          "manager = #{manager,jdbcType=VARCHAR},",
          "phone = #{phone,jdbcType=VARCHAR},",
          "intro = #{intro,jdbcType=VARCHAR},",
          "type_id = #{typeId,jdbcType=INTEGER}",
        "where id = #{id,jdbcType=INTEGER}"
    })
    int updateByPrimaryKey(PracticeCenter record);

    //查询所有文明实践中心的方法  
    @Select({
        "select",
        "id, center_name, create_time, address, manager, phone, intro, type_id, imgs",
        "from practice_center"
    })
    @ResultMap("centerMap")
    List<PracticeCenter> selectAll();
    
    
    //根据名称模糊查询
    @Select({
        "select",
        "id, center_name, create_time, address, manager, phone, intro, type_id, imgs",
        "from practice_center",
        "where center_name LIKE concat ('%', #{name},'%')"
    })
    @ResultMap("centerMap")
    List<PracticeCenter> selectByCenterName(String name);
    
    //查找所有的实践中心名称
    @Select({
        "select",
        "center_name",
        "from practice_center",
    })
    @Results({
            @Result(column="center_name", property="centerName", jdbcType=JdbcType.VARCHAR),
        })
    List<String> selectAllCenterName();
}
    