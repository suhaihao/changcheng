package cc.hdgg.dao;

import cc.hdgg.entity.ActivityMessage;

import java.util.List;

import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.InsertProvider;
import org.apache.ibatis.annotations.Result;
import org.apache.ibatis.annotations.ResultMap;
import org.apache.ibatis.annotations.Results;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.Update;
import org.apache.ibatis.annotations.UpdateProvider;
import org.apache.ibatis.type.JdbcType;

public interface ActivityMessageMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table activity_message
     *
     * @mbg.generated Thu Apr 30 18:01:33 CST 2020
     */
    @Delete({
        "delete from activity_message",
        "where id = #{id,jdbcType=INTEGER}"
    })
    int deleteByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table activity_message
     *
     * @mbg.generated Thu Apr 30 18:01:33 CST 2020
     */
    @Insert({
        "insert into activity_message (id, name, ",
        "head_img, message, ",
        "activity_id, user_id, ",
        "create_time)",
        "values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, ",
        "#{headImg,jdbcType=VARCHAR}, #{message,jdbcType=VARCHAR}, ",
        "#{activityId,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, ",
        "#{createTime,jdbcType=TIMESTAMP})"
    })
    int insert(ActivityMessage record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table activity_message
     *
     * @mbg.generated Thu Apr 30 18:01:33 CST 2020
     */
    @InsertProvider(type=ActivityMessageSqlProvider.class, method="insertSelective")
    int insertSelective(ActivityMessage record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table activity_message
     *
     * @mbg.generated Thu Apr 30 18:01:33 CST 2020
     */
    @Select({
        "select",
        "id, name, head_img, message, activity_id, user_id, create_time",
        "from activity_message",
        "where id = #{id,jdbcType=INTEGER}"
    })
    @Results(id="messageMap",value={
        @Result(column="id", property="id", jdbcType=JdbcType.INTEGER, id=true),
        @Result(column="name", property="name", jdbcType=JdbcType.VARCHAR),
        @Result(column="head_img", property="headImg", jdbcType=JdbcType.VARCHAR),
        @Result(column="message", property="message", jdbcType=JdbcType.VARCHAR),
        @Result(column="activity_id", property="activityId", jdbcType=JdbcType.INTEGER),
        @Result(column="user_id", property="userId", jdbcType=JdbcType.INTEGER),
        @Result(column="create_time", property="createTime", jdbcType=JdbcType.TIMESTAMP)
    })
    ActivityMessage selectByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table activity_message
     *
     * @mbg.generated Thu Apr 30 18:01:33 CST 2020
     */
    @UpdateProvider(type=ActivityMessageSqlProvider.class, method="updateByPrimaryKeySelective")
    int updateByPrimaryKeySelective(ActivityMessage record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table activity_message
     *
     * @mbg.generated Thu Apr 30 18:01:33 CST 2020
     */
    @Update({
        "update activity_message",
        "set name = #{name,jdbcType=VARCHAR},",
          "head_img = #{headImg,jdbcType=VARCHAR},",
          "message = #{message,jdbcType=VARCHAR},",
          "activity_id = #{activityId,jdbcType=INTEGER},",
          "user_id = #{userId,jdbcType=INTEGER},",
          "create_time = #{createTime,jdbcType=TIMESTAMP}",
        "where id = #{id,jdbcType=INTEGER}"
    })
    int updateByPrimaryKey(ActivityMessage record);
    
    //查询所有的留言信息
    @Select({
    	"select",
        "id, name, head_img, message, activity_id, user_id, create_time",
        "from activity_message"
    })
    @ResultMap("messageMap")
    List<ActivityMessage> selectAll();
    
    //根据activity_id 查询所有的信息
    @Select({
    	"select",
        "id, name, head_img, message, activity_id, user_id, create_time",
        "from activity_message",
        "where activity_id = #{activity_id,jdbcType=INTEGER}"
    })
    @ResultMap("messageMap")
    List<ActivityMessage> selectByActivityId(Integer activity_Id);
}