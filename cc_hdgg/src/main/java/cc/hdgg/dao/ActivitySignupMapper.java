package cc.hdgg.dao;

import cc.hdgg.entity.ActivityNotice;
import cc.hdgg.entity.ActivitySignup;

import java.util.List;

import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.InsertProvider;
import org.apache.ibatis.annotations.Result;
import org.apache.ibatis.annotations.One;
import org.apache.ibatis.annotations.ResultMap;
import org.apache.ibatis.annotations.Results;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.Update;
import org.apache.ibatis.annotations.UpdateProvider;
import org.apache.ibatis.mapping.FetchType;
import org.apache.ibatis.type.JdbcType;

public interface ActivitySignupMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table activity_signup
     *
     * @mbg.generated Thu Apr 30 18:17:02 CST 2020
     */
    @Delete({
        "delete from activity_signup",
        "where id = #{id,jdbcType=INTEGER}"
    })
    int deleteByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table activity_signup
     *
     * @mbg.generated Thu Apr 30 18:17:02 CST 2020
     */
    @Insert({
        "insert into activity_signup (id, activity_id, ",
        "user_id, create_time, ",
        "create_by, name, ",
        "age, head_img, grade, ",
        "phone, address)",
        "values (#{id,jdbcType=INTEGER}, #{activityId,jdbcType=INTEGER}, ",
        "#{userId,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, ",
        "#{createBy,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, ",
        "#{age,jdbcType=INTEGER}, #{headImg,jdbcType=VARCHAR}, #{grade,jdbcType=VARCHAR}, ",
        "#{phone,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR})"
    })
    int insert(ActivitySignup record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table activity_signup
     *
     * @mbg.generated Thu Apr 30 18:17:02 CST 2020
     */
    @InsertProvider(type=ActivitySignupSqlProvider.class, method="insertSelective")
    int insertSelective(ActivitySignup record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table activity_signup
     *
     * @mbg.generated Thu Apr 30 18:17:02 CST 2020
     */
    @Select({
        "select",
        "id, activity_id, user_id, create_time, create_by, name, age, head_img, grade, ",
        "phone, address",
        "from activity_signup",
        "where id = #{id,jdbcType=INTEGER}"
    })
    @Results(id="signupMap",value={
        @Result(column="id", property="id", jdbcType=JdbcType.INTEGER, id=true),
        @Result(column="activity_id", property="activityId", jdbcType=JdbcType.INTEGER),
        @Result(column="user_id", property="userId", jdbcType=JdbcType.INTEGER),
        @Result(column="create_time", property="createTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="create_by", property="createBy", jdbcType=JdbcType.INTEGER),
        @Result(column="name", property="name", jdbcType=JdbcType.VARCHAR),
        @Result(column="age", property="age", jdbcType=JdbcType.INTEGER),
        @Result(column="head_img", property="headImg", jdbcType=JdbcType.VARCHAR),
        @Result(column="grade", property="grade", jdbcType=JdbcType.VARCHAR),
        @Result(column="phone", property="phone", jdbcType=JdbcType.VARCHAR),
        @Result(column="address", property="address", jdbcType=JdbcType.VARCHAR)
    })
    ActivitySignup selectByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table activity_signup
     *
     * @mbg.generated Thu Apr 30 18:17:02 CST 2020
     */
    @UpdateProvider(type=ActivitySignupSqlProvider.class, method="updateByPrimaryKeySelective")
    int updateByPrimaryKeySelective(ActivitySignup record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table activity_signup
     *
     * @mbg.generated Thu Apr 30 18:17:02 CST 2020
     */
    @Update({
        "update activity_signup",
        "set activity_id = #{activityId,jdbcType=INTEGER},",
          "user_id = #{userId,jdbcType=INTEGER},",
          "create_time = #{createTime,jdbcType=TIMESTAMP},",
          "create_by = #{createBy,jdbcType=INTEGER},",
          "name = #{name,jdbcType=VARCHAR},",
          "age = #{age,jdbcType=INTEGER},",
          "head_img = #{headImg,jdbcType=VARCHAR},",
          "grade = #{grade,jdbcType=VARCHAR},",
          "phone = #{phone,jdbcType=VARCHAR},",
          "address = #{address,jdbcType=VARCHAR}",
        "where id = #{id,jdbcType=INTEGER}"
    })
    int updateByPrimaryKey(ActivitySignup record);
    
    //查询所有报名信息的方法  
    @Select({
    	"select",
        "id, activity_id, user_id, create_time, create_by, name, age, head_img, grade, ",
        "phone, address",
        "from activity_signup",
    })
    @ResultMap("signupMap")
    List<ActivitySignup> selectAll();
    
    //根据activity_id 查询报名信息及用户信息
    @Select({
    	"select",
        "id, activity_id, user_id, create_time, create_by, name, age, head_img, grade, ",
        "phone, address",
        "from activity_signup",
        "where activity_id = #{activity_id,jdbcType=INTEGER}"
    })
    @ResultMap("signupMap")
    List<ActivitySignup> selectByActivityId(Integer activity_Id);
    
    //根据手机号 查询用户报名的活动
    @Select({
    	"select",
        "activity_id",
        "from activity_signup",
        "where phone = #{phone,jdbcType=VARCHAR}"
    })   
    @Results({
            @Result(column="activity_id", property="notice",
            	one=@One(select="cc.hdgg.dao.ActivityNoticeMapper.selectByPrimaryKey",fetchType= FetchType.EAGER))
        })
    List<ActivitySignup> selectByPhone(String phone);
    
  //根据用户id 查询用户报名的活动
    @Select({
    	"select",
        "activity_id",
        "from activity_signup",
        "where user_id = #{user_id,jdbcType=INTEGER}"
    })   
    @Results({
            @Result(column="activity_id", property="notice",
            	one=@One(select="cc.hdgg.dao.ActivityNoticeMapper.selectByPrimaryKey",fetchType= FetchType.EAGER))
        })
    List<ActivitySignup> selectByUserId(int user_id);
    
}